services:
  db:
    image: postgres:13
    container_name: movie_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - ./.env.prod
    ports:
      - "5432:5432"
    networks:
      - app_network


  web:
    build: ./
    container_name: movie-app
    command: bash entrypoint.sh
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://POSTGRES_USER:POSTGRES_PASSWORD@db:5432/POSTGRES_DB
    networks:
      - app_network

  backup:
    image: offen/docker-volume-backup:v2
    volumes:
      - pg_data:/backup/movie-app-backup:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./backups:/archive
    networks:
      - app_network
    depends_on:
      - db
    environment:
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_LATEST_SYMLINK: backup-latest.tar.gz
      BACKUP_CRON_EXPRESSION: "*/1440 * * * *"


volumes:
  pg_data:

networks:
  app_network:
